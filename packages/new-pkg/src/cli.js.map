{"version":3,"sources":["../src/cli.js"],"names":["dir2pkgCli","argv","console","log","chalk","bold","white","pkg","name","version","parsedArgv","option","alias","describe","type","demandOption","default","usage","description","help","spinner","text","progress","report","stopAndPersist","gray","start","path","join","process","cwd","inDir","outDir","pkgJsonName","pkgJsonPath","ignore","then","succeed","green","catch","err","fail","red","stack","exit"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport yargs from 'yargs';\nimport chalk from 'chalk';\nimport ora from 'ora';\nimport path from 'path';\nimport dir2pkg from './index';\nimport pkg from '../package.json';\n\nexport default function dir2pkgCli(argv) {\n  console.log(chalk.bold.white(`${pkg.name} v${pkg.version}`));\n\n  const parsedArgv = yargs(argv)\n    .option('in-dir', {\n      alias: 'i',\n      describe: 'In directory',\n      type: 'string',\n      demandOption: true,\n    })\n    .option('out-dir', {\n      alias: 'o',\n      describe: 'Out directory',\n      type: 'string',\n      demandOption: true,\n    })\n    .option('pkg-json-name', {\n      alias: 'n',\n      describe: 'package name',\n      type: 'string',\n      demandOption: true,\n    })\n    .option('pkg-json-path', {\n      alias: 'p',\n      describe: 'Host package.json path',\n      type: 'string',\n      demandOption: true,\n    })\n    .option('ignore', {\n      alias: 'd',\n      describe: 'List of dependencies to ignore',\n      type: 'array',\n      default: [],\n    })\n    .usage(`${pkg.description}.\\nUsage: $0 <file or dir> [options]`)\n    .version()\n    .alias('version', 'v')\n    .help()\n    .alias('help', 'h').argv;\n\n  const spinner = ora({ text: 'Processing...' });\n  const progress = (report) => {\n    spinner.stopAndPersist({ text: `${chalk.gray(report)}` });\n  };\n\n  spinner.start();\n\n  return dir2pkg(\n    path.join(process.cwd(), parsedArgv.inDir),\n    path.join(process.cwd(), parsedArgv.outDir),\n    {\n      pkgJsonName: parsedArgv.pkgJsonName,\n      pkgJsonPath: path.join(process.cwd(), parsedArgv.pkgJsonPath),\n      ignore: parsedArgv.ignore,\n      progress,\n    }\n  )\n    .then(() => {\n      spinner.succeed(`${chalk.bold.green('success')} converted directory to package`);\n    })\n    .catch((err) => {\n      spinner.stopAndPersist();\n      spinner.fail(`${chalk.bold.red('error')} ${err.stack}`);\n      process.exit(1);\n    });\n}\n"],"file":"cli.js"}